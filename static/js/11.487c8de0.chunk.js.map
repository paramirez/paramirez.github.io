{"version":3,"sources":["../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/mode/django/django.js"],"names":["CodeMirror","overlayMode","base","overlay","combine","startState","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","state","token","stream","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","mod","require","defineMode","keywords","filters","operators","wordOperators","tokenBase","match","tokenize","inVariable","inTag","inComment","next","inString","delimiter","previousTokenizer","escapeNext","eat","waitDot","peek","waitProperty","Error","waitPipe","waitFilter","eatSpace","foundVariable","keywordMatch","blockCommentTag","inBlockComment","skipToEnd","RegExp","join","blockCommentStart","blockCommentEnd","config","htmlBase","getMode","djangoInner","defineMIME"],"mappings":"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","file":"static/js/11.487c8de0.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function() {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\",\n                    \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\",\n                    \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\",\n                    \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\",\n                    \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\",\n                    \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\",\n                    \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\",\n                    \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\",\n                   \"default\", \"default_if_none\", \"dictsort\",\n                   \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\",\n                   \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\",\n                   \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\",\n                   \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\",\n                   \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\",\n                   \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\",\n                   \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\",\n                   \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\",\n                   \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\",\n                   \"unordered_list\", \"upper\", \"urlencode\", \"urlize\",\n                   \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\");\n\n    // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n    function tokenBase (stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      }\n\n      // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n      return null;\n    }\n\n    // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n    function inString (delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next();\n\n          // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    // Apply Django template variable syntax highlighting\n    function inVariable (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to find the variable\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to match an operator\n      if (stream.match(operators)) {\n        return \"operator\";\n      }\n\n      // Attempt to match a word operator\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      }\n\n      // Attempt to match a keyword\n      var keywordMatch = stream.match(keywords);\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n        return \"keyword\";\n      }\n\n      // Attempt to match a variable\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false;  // Release the \"lock\"\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    // Mark everything as comment inside the tag and the tag itself.\n    function inComment (stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase\n      else stream.skipToEnd()\n      return \"comment\";\n    }\n\n    // Mark everything as a comment until the `blockcomment` tag closes.\n    function inBlockComment (stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n\n  CodeMirror.defineMode(\"django\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});\n"],"sourceRoot":""}