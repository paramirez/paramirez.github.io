{"version":3,"sources":["../node_modules/codemirror/mode/soy/soy.js"],"names":["CodeMirror","paramData","noEndTag","soyState","tags","variableScope","reduceIndent","indentingTags","Object","keys","filter","tag","defineMode","config","textMode","getMode","modes","html","name","multilineTagIndentFactor","multilineTagIndentPastTag","attributes","text","uri","trusted_resource_uri","css","js","statementIndent","indentUnit","last","array","length","tokenUntil","stream","state","untilRegExp","sol","indent","eat","oldString","string","match","exec","substr","pos","index","result","hideFirstChars","localState","localStates","mode","token","prepend","list","element","next","popcontext","context","scope","variables","previousContext","ref","loose","contains","Context","this","kind","expression","push","lookupVariables","quoteKind","test","startState","scopes","copyState","concat","map","pop","skipToEnd","paramRe","current","peekChar","peek","indexOf","tagName","endTag","substring","selfClosed","prevTag","indentingTag","tagError","textAfter","line","top","Pass","innerMode","electricInput","lineComment","blockCommentStart","blockCommentEnd","blockCommentContinue","useInnerComments","fold","registerHelper","defineMIME","mod","require"],"mappings":"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","file":"static/js/95.691d16d6.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"for-loop\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"for-loop\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    function expression(stream, state) {\n      var match;\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.context = new Context(state.context, \"list-literal\", state.variables);\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/map\\b/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/record\\b/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) ||\n          stream.match(/0x([0-9a-fA-F]{2,})/) ||\n          stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n\n      stream.next();\n      return null;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true, // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.soyState.pop();\n              return ref(state.variables, match[1], !state.lookupVariables);\n            }\n\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"(\") {\n              state.soyState.push('param-type-template');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-template\":\n            if (stream.match(/[>]/)) {\n              state.soyState.pop();\n              state.soyState.push('param-type');\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"for-loop\":\n            if (stream.match(/\\bin\\b/)) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            if (stream.peek() == \"$\") {\n              state.soyState.push('var-def');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"record-key\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"map-value\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"list-literal\":\n            if (stream.match(/\\]/)) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              popcontext(state);\n              return null;\n            }\n            if (stream.match(/\\bfor\\b/)) {\n              state.lookupVariables = true;\n              state.soyState.push('for-loop');\n              return \"keyword\";\n            }\n            return expression(stream, state);\n\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"import\":\n            if (stream.eat(\";\")) {\n              state.soyState.pop();\n              state.indent -= 2 * config.indentUnit;\n              return null;\n            }\n            if (stream.match(/\\w+(?=\\s+as)/)) {\n              return \"variable\";\n            }\n            if (match = stream.match(/\\w+/)) {\n              return /(from|as)/.test(match[0]) ? \"keyword\" : \"def\";\n            }\n            if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match[0];\n              return \"string\";\n            }\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag = state.tag[0] == \"/\";\n            var tagName = endTag ? state.tag.substring(1) : state.tag;\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            }\n            return expression(stream, state);\n\n          case \"literal\":\n            if (stream.match(/^(?=\\{\\/literal})/)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n        }\n\n        if (stream.match(/^\\{literal}/)) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              if (!state.context || state.context.tag != tagName) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (!state.context && stream.match(/\\bimport\\b/)) {\n          state.soyState.push(\"import\");\n          state.indent += 2 * config.indentUnit;\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n"],"sourceRoot":""}